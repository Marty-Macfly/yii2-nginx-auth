server {
    listen       80;
    server_name  _;

    location / {
        # We want to protect the root of our website
        auth_request /auth;

        error_page 401 = @error401;
        error_page 403 = @error403;

        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    location @error401 {
        # If request is made from a browser redirect to the login page of our Yii site
        if ($http_accept ~* "(text/html)|(application/xhtml+xml)") {
            # If you want the user to come back here after successful login add
            # the following query string "?return_url=http://127.0.0.1:8888"
            return 302 http://127.0.0.1:8080/site/login?return_url=${scheme}://${http_host}${request_uri};
            # If you don't want the user to be redirect back just remove
            # the query string
            # return 302 http://127.0.0.1:8080/site/login;
        }

        # If request is made from a cli or a robot display a simple message
        return 401 "Unauthorized: You didn't provide the authentication token";
    }

    location @error403 {
        # If request is made from a browser display an html page
        # saying user doesn't have enough right to access the location
        if ($http_accept ~* "(text/html)|(application/xhtml+xml)") {
            return 403;
        }

        # If request is made from a cli or a robot display a simple message
        return 403 "Forbidden: You don't have permissions to access that resource";
    }

    location = /auth {
        internal;

        # The rewrite is used to list the authorization the user required to
        #  access the location. You can also use the following :
        # /nginx/auth any logged in user can access the location
        # /nginx/auth?permission=reader any user which have 'read' permission
        # can access the location
        # /nginx/auth?permission[]=reader&permission[]=moderator any user which have 'read'
        # or 'moderator' permission can access the location

        rewrite ^(.*)$ /nginx/auth?permission[]=test&permission[]=plop? break;
        proxy_pass                      http://yii:8080;
        proxy_pass_request_headers      on;

        # Don't forward useless data
        proxy_pass_request_body         off;
        proxy_set_header Content-Length "";
    }
}
